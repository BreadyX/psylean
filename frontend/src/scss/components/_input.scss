@use 'sass:list';
@use 'sass:selector';

@use '@/scss/globals' as *;

@mixin input($focus-classes: null, $disabled-replacement: null) {
  @if & == null {
    @error 'Mixin should be used inside a parent class!';
  }

  $focus-sel: ':focus';
  $disabled-sel: ':disabled, :disabled:focus, :disabled:hover';

  @if $focus-classes != null {
    @each $class in $focus-classes {
      $focus-sel: selector.extend($focus-sel, ':focus', $class);
    }
  }

  @if $disabled-replacement != null {
    $disabled-sel: selector.replace(
      $disabled-sel,
      ':disabled',
      $disabled-replacement
    );
  }

  $focus-sel: selector.append(&, $focus-sel);
  $disabled-sel: selector.append(&, $disabled-sel);

  background-color: var(--c-input);
  color: var(--c-input-text);
  border: 1px solid var(--c-border);
  border-radius: var(--radius-element);

  box-shadow: 0 0 2px var(--input-shadow-color, var(--c-shadow-on-bg-faint));

  padding: var(--space-xs) var(--space-s);

  transition-duration: var(--transition-speed);

  &::placeholder {
    color: var(--c-input-text);
  }

  &:hover {
    background-color: var(--c-input-hover);
  }

  @at-root #{$disabled-sel} {
    outline: none;
    background-color: var(--c-input-disabled);
    border: 1px solid var(--c-border);
    color: var(--c-text-secondary);
    box-shadow: none;
    cursor: default;
  }

  @at-root #{$focus-sel} {
    outline: none;
    border: 1px solid var(--c-input-border-focus);
    box-shadow: 0 0 3px var(--c-input-shadow-focus);
  }

  &.error {
    border: 1px solid var(--c-input-border-error);
    box-shadow: 0 0 4px var(--c-input-shadow-error);
  }
}
